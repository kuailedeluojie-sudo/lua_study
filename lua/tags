!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Account.new	2.lua	/^function Account.new(o)$/;"	f
Account.withdraw	1.lua	/^function Account.withdraw(self,v)$/;"	f
Account.withdraw	1.lua	/^function Account.withdraw(v)$/;"	f
Account:balance	7.lua	/^function Account:balance()$/;"	f
Account:deposit	2.lua	/^function Account:deposit(v)$/;"	f
Account:deposit	3.lua	/^function Account:deposit(v)$/;"	f
Account:deposit	7.lua	/^function Account:deposit(v)$/;"	f
Account:new	3.lua	/^function Account:new(o)$/;"	f
Account:new	7.lua	/^function Account:new(o)$/;"	f
Account:new1	2.lua	/^function Account:new1(o) --冒号法引进slef 本身$/;"	f
Account:withdraw	3.lua	/^function Account:withdraw(v)$/;"	f
Account:withdraw	7.lua	/^function Account:withdraw(v)$/;"	f
Sa:getLimit	3.lua	/^function Sa:getLimit() --冒号很逗号要区别开，很重要$/;"	f
Sa:withdraw	3.lua	/^function Sa:withdraw(v)$/;"	f
__add 	ffi_cdata.lua	/^	__add = function(a,b) return point(a.x+b.x,a.y+b.y) end,$/;"	f
__index 	9.lua	/^	__index = function(_,n)$/;"	f
__len 	ffi_cdata.lua	/^	__len = function(a) return math.sqrt(a.x*a.x + a.y * a.y) end,$/;"	f
__newindex 	9.lua	/^	__newindex = function(t,n,v)$/;"	f
add	float.c	/^float  add(float x,float y)$/;"	f	signature:(float x,float y)
add	myffi.c	/^int add(int x ,int y)$/;"	f	signature:(int x ,int y)
allwords	allwords.lua	/^function allwords()$/;"	f
area 	ffi_cdata.lua	/^		area = function(a) return a.x * a.x + a.y * a.y end,$/;"	f
attack	all_fun.lua	/^local function attack(x)$/;"	f
c:new	3.lua	/^	function c:new(o)$/;"	f
c:new	4.lua	/^	function c:new(o)$/;"	f
change	fun.lua	/^local function change(arg) --改变长方形的长和宽，使其各增长一倍$/;"	f
consumer	17.lua	/^function consumer(prod)$/;"	f
createClass	3.lua	/^function createClass(...)$/;"	f
createClass	4.lua	/^function createClass(...)$/;"	f
do_action	all_fun.lua	/^local function do_action(method,...)--传入函数名$/;"	f
factory	13.lua	/^function factory(_ENV)$/;"	f
filter	17.lua	/^function filter(prod)$/;"	f
foo	13.lua	/^local function foo()$/;"	f
fun1	fun.lua	/^local function fun1(a,b) --两个实参，多余的实参被忽略掉$/;"	f
fun2	fun.lua	/^local function fun2(a,b,c, d) --两个实参，没有被实参初始化的形参，用nil初始化$/;"	f
func	fun.lua	/^local function func(...) --形参为...，表示函数采用边长参数$/;"	f
getfield	8.lua	/^function getfield(f)$/;"	f
init	fun_return.lua	/^function init()$/;"	f
local deposit 	5.lua	/^	local deposit = function(v)$/;"	f
local getbalance 	5.lua	/^	local getbalance = function() return self.balance end$/;"	f
local withdraw 	5.lua	/^	local withdraw = function (v)$/;"	f
main	1.c	/^int main(void)$/;"	f	signature:(void)
main	main.c	/^int main()$/;"	f
mem_loadstring	16.lua	/^function mem_loadstring(s)$/;"	f
named:getname	3.lua	/^function named:getname()$/;"	f
named:getname	4.lua	/^function named:getname()$/;"	f
named:setname	3.lua	/^function named:setname(n)$/;"	f
named:setname	4.lua	/^function named:setname(n)$/;"	f
newaccount	5.lua	/^function newaccount(init)$/;"	f
newobject	6.lua	/^function newobject(value)$/;"	f
permgen	18.lua	/^function permgen(a,n)$/;"	f
printResule	18.lua	/^function printResule(a)$/;"	f
producer	17.lua	/^function producer()$/;"	f
receive	17.lua	/^function  receive(prod)$/;"	f
run	all_fun.lua	/^local function run(x,y)$/;"	f
sdl_1	hello.c	/^int sdl_1()$/;"	f
search	3.lua	/^local function search(k,plist)$/;"	f
search	4.lua	/^local function search(k,plist)$/;"	f
send	17.lua	/^function send(x)$/;"	f
setfield	8.lua	/^function setfield(f,v)$/;"	f
setmetatable(c,{__index 	3.lua	/^	setmetatable(c,{__index = function (t,k)$/;"	f
setmetatable(c,{__index 	4.lua	/^	setmetatable(c,{__index = function (t,k)$/;"	f
swap	fun.lua	/^local function swap(a,b)$/;"	f
swap	fun_return.lua	/^local function swap(a,b)$/;"	f
withdraw 	2.lua	/^	withdraw = function(self,v)$/;"	f
